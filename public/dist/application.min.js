"use strict";var ApplicationConfiguration=function(){var applicationModuleName="enterpriseapp",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("customers"),ApplicationConfiguration.registerModule("employees"),ApplicationConfiguration.registerModule("invoices"),ApplicationConfiguration.registerModule("products"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("customers").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Customers","customers","dropdown","/customers(/create)?",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","customers","List Customers","customers","customers",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","customers","New Customer","customers/create","customers/create",!1,["salesuser","salesadmin","accountsuser","accountsadmin","superadmin"])}]),angular.module("customers").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCustomers",{url:"/customers",templateUrl:"modules/customers/views/list-customers.client.view.html"}).state("createCustomer",{url:"/customers/create",templateUrl:"modules/customers/views/create-customer.client.view.html"}).state("viewCustomer",{url:"/customers/:customerId",templateUrl:"modules/customers/views/view-customer.client.view.html"}).state("editCustomer",{url:"/customers/:customerId/edit",templateUrl:"modules/customers/views/edit-customer.client.view.html"})}]),angular.module("customers").controller("CustomersController",["$scope","$stateParams","$location","Authentication","Customers",function($scope,$stateParams,$location,Authentication,Customers){$scope.authentication=Authentication,$scope.create=function(){var customer=new Customers({name:this.name});customer.$save(function(response){$location.path("customers/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(customer){if(customer){customer.$remove();for(var i in $scope.customers)$scope.customers[i]===customer&&$scope.customers.splice(i,1)}else $scope.customer.$remove(function(){$location.path("customers")})},$scope.update=function(){var customer=$scope.customer;customer.$update(function(){$location.path("customers/"+customer._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.customers=Customers.query()},$scope.findOne=function(){$scope.customer=Customers.get({customerId:$stateParams.customerId})}}]),angular.module("customers").factory("Customers",["$resource",function($resource){return $resource("customers/:customerId",{customerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("employees").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Employees","employees","dropdown","/employees(/create)?",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin","engineeringuser"]),Menus.addSubMenuItem("topbar","employees","List Employees","employees","employees",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin","engineeringuser"]),Menus.addSubMenuItem("topbar","employees","New Employee","employees/create","employees/create",!1,["superadmin"])}]),angular.module("employees").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEmployees",{url:"/employees",templateUrl:"modules/employees/views/list-employees.client.view.html"}).state("createEmployee",{url:"/employees/create",templateUrl:"modules/employees/views/create-employee.client.view.html"}).state("viewEmployee",{url:"/employees/:employeeId",templateUrl:"modules/employees/views/view-employee.client.view.html"}).state("editEmployee",{url:"/employees/:employeeId/edit",templateUrl:"modules/employees/views/edit-employee.client.view.html"})}]),angular.module("employees").controller("EmployeesController",["$scope","$stateParams","$location","Authentication","Employees",function($scope,$stateParams,$location,Authentication,Employees){$scope.authentication=Authentication,$scope.create=function(){var employee=new Employees({username:this.username,department:this.department,employeeId:this.employeeId,doj:this.doj,dob:this.dob,designation:this.designation});employee.$save(function(response){$location.path("employees/"+response._id),$scope.username="",$scope.department="",$scope.employeeId="",$scope.doj="",$scope.dob="",$scope.designation=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(employee){if(employee){employee.$remove();for(var i in $scope.employees)$scope.employees[i]===employee&&$scope.employees.splice(i,1)}else $scope.employee.$remove(function(){$location.path("employees")})},$scope.update=function(){var employee=$scope.employee;employee.$update(function(){$location.path("employees/"+employee._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.employees=Employees.query()},$scope.findOne=function(){$scope.employee=Employees.get({employeeId:$stateParams.employeeId})}}]),angular.module("employees").factory("Employees",["$resource",function($resource){return $resource("employees/:employeeId",{employeeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("invoices").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Invoices","invoices","dropdown","/invoices(/create)?",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","invoices","List Invoices","invoices","invoices",!1,["salesuser","salesadmin","accountsuser","accountsadmin","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","invoices","New Invoice","invoices/create","invoices/create",!1,["salesuser","salesadmin","accountsuser","accountsadmin","superadmin"])}]),angular.module("invoices").config(["$stateProvider",function($stateProvider){$stateProvider.state("listInvoices",{url:"/invoices",templateUrl:"modules/invoices/views/list-invoices.client.view.html"}).state("createInvoice",{url:"/invoices/create",templateUrl:"modules/invoices/views/create-invoice.client.view.html"}).state("viewInvoice",{url:"/invoices/:invoiceId",templateUrl:"modules/invoices/views/view-invoice.client.view.html"}).state("editInvoice",{url:"/invoices/:invoiceId/edit",templateUrl:"modules/invoices/views/edit-invoice.client.view.html"})}]),angular.module("invoices").controller("InvoicesController",["$scope","$stateParams","$location","Authentication","Invoices",function($scope,$stateParams,$location,Authentication,Invoices){$scope.authentication=Authentication,$scope.create=function(){var invoice=new Invoices({name:this.name});invoice.$save(function(response){$location.path("invoices/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(invoice){if(invoice){invoice.$remove();for(var i in $scope.invoices)$scope.invoices[i]===invoice&&$scope.invoices.splice(i,1)}else $scope.invoice.$remove(function(){$location.path("invoices")})},$scope.update=function(){var invoice=$scope.invoice;invoice.$update(function(){$location.path("invoices/"+invoice._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.invoices=Invoices.query()},$scope.findOne=function(){$scope.invoice=Invoices.get({invoiceId:$stateParams.invoiceId})}}]),angular.module("invoices").factory("Invoices",["$resource",function($resource){return $resource("invoices/:invoiceId",{invoiceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("products").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Products","products","dropdown","/products(/create)?",!1,["salesuser","salesadmin","accountsuser","accountsadmin","customeruser","engineeringuser","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","products","List Products","products","products",!1,["salesuser","salesadmin","accountsuser","accountsadmin","customeruser","engineeringuser","deliveryuser","deliveryadmin","superadmin"]),Menus.addSubMenuItem("topbar","products","New Product","products/create","products/create",!1,["accountsuser","accountsadmin","engineeringuser","superadmin"])}]),angular.module("products").config(["$stateProvider",function($stateProvider){$stateProvider.state("listProducts",{url:"/products",templateUrl:"modules/products/views/list-products.client.view.html"}).state("createProduct",{url:"/products/create",templateUrl:"modules/products/views/create-product.client.view.html"}).state("viewProduct",{url:"/products/:productId",templateUrl:"modules/products/views/view-product.client.view.html"}).state("editProduct",{url:"/products/:productId/edit",templateUrl:"modules/products/views/edit-product.client.view.html"})}]),angular.module("products").controller("ProductsController",["$scope","$stateParams","$location","Authentication","Products",function($scope,$stateParams,$location,Authentication,Products){$scope.authentication=Authentication,$scope.create=function(){var product=new Products({name:this.name});product.$save(function(response){$location.path("products/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(product){if(product){product.$remove();for(var i in $scope.products)$scope.products[i]===product&&$scope.products.splice(i,1)}else $scope.product.$remove(function(){$location.path("products")})},$scope.update=function(){var product=$scope.product;product.$update(function(){$location.path("products/"+product._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.products=Products.query()},$scope.findOne=function(){$scope.product=Products.get({productId:$stateParams.productId})}}]),angular.module("products").factory("Products",["$resource",function($resource){return $resource("products/:productId",{productId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Users","users","dropdown","/users/profiles(/create)?",!1,["user","superadmin"]),Menus.addSubMenuItem("topbar","users","List Users","users/profiles/list"),Menus.addSubMenuItem("topbar","users","New User","users/profiles/create")}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("edit-user",{url:"/users/profiles/:userId/edit",templateUrl:"modules/users/views/edit-user.client.view.html"}).state("create-user",{url:"/users/profiles/create",templateUrl:"modules/users/views/create-users.client.view.html"}).state("list-user",{url:"/users/profiles/list",templateUrl:"modules/users/views/list-users.client.view.html"}).state("view-user",{url:"/users/profiles/:userId",templateUrl:"modules/users/views/view-user.client.view.html"}).state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("CreateUsersController",["$scope","$stateParams","$location","Authentication","Users","UsersProfiles",function($scope,$stateParams,$location,Authentication,Users,UsersProfiles){$scope.create=function(){var userProfile=new UsersProfiles({username:this.username,firstName:this.firstName,lastName:this.lastName,email:this.email,password:this.password});userProfile.$save(function(response){console.log(response),$location.path("users/profiles/"+response._id),$scope.username="",$scope.firstName="",$scope.lastName="",$scope.email="",$scope.password=""},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("EditUsersController",["$scope","$stateParams","$location","Authentication","Users","UsersProfiles",function($scope,$stateParams,$location,Authentication,Users,UsersProfiles){$scope.authentication=Authentication,$scope.update=function(){var user=$scope.user;user.$update(function(){$location.path("users/profiles"+user._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findOne=function(){$scope.user=UsersProfiles.get({userId:$stateParams.userId})}}]),angular.module("users").controller("ListUsersController",["$scope","$stateParams","$location","Authentication","Users","UsersProfiles",function($scope,$stateParams,$location,Authentication,Users,UsersProfiles){$scope.find=function(){$scope.users=UsersProfiles.query()}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ViewUserController",["$scope","$location","$stateParams","Authentication","UsersProfiles",function($scope,$location,$stateParams,Authentication,UsersProfiles){$scope.authentication=Authentication,$scope.findOne=function(){$scope.user=UsersProfiles.get({userId:$stateParams.userId})},$scope.remove=function(){UsersProfiles.remove({userId:$stateParams.userId})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("users").factory("UsersProfiles",["$resource",function($resource){return $resource("users/profiles/:userId",{userId:"@_id"},{update:{method:"PUT"},remove:{method:"DELETE"}})}]);